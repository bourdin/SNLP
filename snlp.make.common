ifdef PETSC_DIR
	#import PETSc rules and variables
	ifneq ($(wildcard ${PETSC_DIR}/lib/petsc/conf/.*),)
		# older than 3.5
		include ${PETSC_DIR}/lib/petsc/conf/variables
		include ${PETSC_DIR}/lib/petsc/conf/rules
	else
		# newer than 3.5
		include ${PETSC_DIR}/lib/petsc-conf/variables
		include ${PETSC_DIR}/lib/petsc-conf/rules
	endif
	LIBS := $(PETSC_LIB)
else
	LIBS := 
	CLINKER = cc
	LD_SHARED = cc
endif
# check if we are cloned from a repo


# usefull variables and commands
srcfiles := $(wildcard src/*.c)
includefiles:= $(wildcard include/*.h)
allobj := $(wildcard obj/*.o)
obj-suffix := o
LIB_DIR	:= $(rootdir)/lib
INCLUDE_DIR := $(rootdir)/include
EXAMPLES_DIR := $(rootdir)/examples
OBJ_DIR	:= obj
OBJ_FILES := $(addprefix obj/,$(notdir $(srcfiles:.c=.$(obj-suffix))))

MKDIR_P	:= mkdir -p
EXAMPLE_FILES := $(EXAMPLES_DIR)/example1.c $(EXAMPLES_DIR)/example2.c $(EXAMPLES_DIR)/example2ctx.c
EXAMPLE_EXECS := $(EXAMPLES_DIR)/example1.out $(EXAMPLES_DIR)/example2.out $(EXAMPLES_DIR)/example2ctx.out

#detect the system type
ifeq ($(OS),Windows_NT)
	echo "WINDOWS DETECETED SELF DESTRUCTION IN 10 seconds!!!!"
else
	UNAME_S := $(shell uname -s)
	ifeq ($(UNAME_S),Linux)
		LIB_SUFFIX := so
		LIBLD := ${CLINKER} -shared -Wl,-soname,snlp.${LIB_SUFFIX}
	endif
	ifeq ($(UNAME_S),Darwin)
		LIBLD := ${LD_SHARED} -g -dynamiclib -single_module -multiply_defined suppress -undefined dynamic_lookup ${DARWIN_COMMONS_USE_DYLIBS}
		LIB_SUFFIX = dylib
	endif
endif